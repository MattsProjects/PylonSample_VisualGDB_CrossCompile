#Generated by VisualGDB project wizard.
#Note: VisualGDB will automatically update this file when you add new sources to the project.

cmake_minimum_required(VERSION 2.7)

set(MY_PROJECT_NAME "PylonSample_VisualGDB_CrossCompile")

project(${MY_PROJECT_NAME})

set(CMAKE_SYSROOT "C:\\SysGCC\\ubuntu\\x86_64-linux-gnu\\sysroot")
set(PYLON_ROOT "${CMAKE_SYSROOT}\\opt\\pylon")

include_directories("${PYLON_ROOT}\\include")
link_directories("${PYLON_ROOT}\\lib")

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
set(CMAKE_Link "${CMAKE_CXX_FLAGS} -std=c++11")

set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_RPATH}  ${PYLON_ROOT}\\bin\\pylon-config --libs-rpath")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--enable-new-dtags -Wl,-rpath,${PYLON_ROOT}\\lib")
set(CMAKE_Link "${CMAKE_Link}   ${PYLON_ROOT}\\bin\\pylon-config --cflags")
set(CMAKE_Link "${CMAKE_Link}  -Wl,--enable-new-dtags -Wl,-rpath,${PYLON_ROOT}\\lib")
set(CMAKE_STATIC_LINKER_FLAGS  "${CMAKE_STATIC_LINKER_FLAGS}  ${PYLON_ROOT}\\bin\\pylon-config --libs")

add_executable(${MY_PROJECT_NAME} ${MY_PROJECT_NAME}.cpp)

target_include_directories(${MY_PROJECT_NAME} PUBLIC "${PYLON_ROOT}\\include")
target_link_libraries(${MY_PROJECT_NAME} "${LIBRARIES_FROM_REFERENCES}")
target_link_libraries(${MY_PROJECT_NAME} pylonbase pylonbase-6.1.1 pylonutility pylonutility-6.1.1 GenApi_gcc_v3_1_Basler_pylon GCBase_gcc_v3_1_Basler_pylon)

